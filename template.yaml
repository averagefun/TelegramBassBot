AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst

Resources:

  ## SNS TOPICS
  BassBoostTrigger:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "BassBoostTrigger"

  SendToChannelTrigger:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "SendToChannelTrigger"

  ## DynamoDB TABLE
  CredTableTBot:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: CredTableTBot
      ProvisionedThroughput:
        WriteCapacityUnits: 1
        ReadCapacityUnits: 1
      AttributeDefinitions:
        - AttributeName: cred_name
          AttributeType: S
      KeySchema:
        - KeyType: HASH
          AttributeName: cred_name

  ## FUNCTIONS
  MsgHandler:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: MsgHandlerTBot
      Description: "Handles message from TelegramBot"
      CodeUri: MsgHandler/
      Handler: entry.lambda_handler
      Timeout: 8
      MemorySize: 128
      Runtime: python3.7
      Layers:
        - !Ref MySqlLayer
      Policies:
        - SNSPublishMessagePolicy:
            TopicName:
              !GetAtt BassBoostTrigger.TopicName
        - SNSPublishMessagePolicy:
            TopicName:
              !GetAtt SendToChannelTrigger.TopicName
        - DynamoDBCrudPolicy:
            TableName:
              Ref: CredTableTBot
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Events:
        BotApi:
          Type: Api
          Properties:
            Path: /
            Method: post

  BassBoostFunction:
      Type: AWS::Serverless::Function
      Properties:
        FunctionName: BassBoostTBot
        Description: "BassBoost audio using ffmpeg layer"
        CodeUri: BassBoost/
        Handler: louder.lambda_handler
        Timeout: 40
        MemorySize: 2768
        Runtime: python3.7
        Policies:
          - DynamoDBReadPolicy:
              TableName:
                Ref: CredTableTBot
        Layers:
          - !Ref ffmpegLayer
          - !Ref NumpyLayer
          - !Ref MySqlLayer
        EventInvokeConfig:
          MaximumRetryAttempts: 0
        Events:
          BassReq:
            Type: SNS
            Properties:
              Topic:
                Ref: BassBoostTrigger

  MailHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: MailHandlerTBot
      Description: "mailing message to all users"
      CodeUri: MailHandler/
      Handler: main.lambda_handler
      Timeout: 100
      Runtime: python3.7
      Layers:
        - !Ref MySqlLayer
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: CredTableTBot
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Events:
        Mail:
          Type: Schedule
          Properties:
            Schedule: cron(0 * ? * * *)

  LikeHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LikeHandlerBassChannel
      Description: "Handles likes/dislikes from @BassBoostCollection"
      CodeUri: LikeHandler/
      Handler: like.lambda_handler
      Timeout: 7
      MemorySize: 128
      Runtime: python3.7
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: CredTableTBot
      Layers:
        - !Ref MySqlLayer
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Events:
        BotApi:
          Type: Api
          Properties:
            Path: /like
            Method: post
        SendToChannel:
          Type: SNS
          Properties:
            Topic:
              Ref: SendToChannelTrigger

  ## LAYERS
  MySqlLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: mysql_layer
      Description: python connect to mysql database
      ContentUri: layers/mysql/
      CompatibleRuntimes:
      - python3.7

  NumpyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: numpy_layer
      Description: amazon linux numpy 18.4
      ContentUri: layers/numpy/
      CompatibleRuntimes:
      - python3.7

  ffmpegLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ffmpeg_layer
      Description: ffmpeg for lambda
      ContentUri: layers/ffmpeg/
      CompatibleRuntimes:
      - python3.7
